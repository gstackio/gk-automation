---
# This is a stripped-down version of the image pipeline from the PCF-pipelines
# project. Here customized for Gstack requirements.
#
# See: <https://github.com/pivotal-cf/pcf-pipelines/blob/master/ci/images/pipeline.yml>

resource_types:
- name: pivnet
  type: registry-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: hashicorp-release
  type: registry-image
  source:
    repository: harbor.ci.gstack.io/cfcommunity/hashicorp-release-resource
    username:   ((private_registry_username))
    password:   ((private-registry-password))

resources:
- name: image-version
  type: semver
  check_every: 24h
  source:
    initial_version: 1.0.0
    driver: git
    uri: ((image_version_git_uri))
    branch: ((image_version_git_branch))
    file: versions/gk-ops-image
    private_key: ((github-private-key))
    git_user: "((git-commit-name)) <((git-commit-email))>"
    commit_message: "%file% updated to version %version%"

- name: dockerfile-repo
  type: git
  icon: github
  check_every: 24h
  webhook_token: ((concourse-webhook-token))
  source:
    uri: ((git_uri))
    branch: ((git_branch))
    private_key: ((github-private-key))
    paths: [ gk-ops-image/Dockerfile ]

- name: gk-ops-image
  type: docker-image # we can't migrate to 'registry-image' until we adopt the 'build-image' task
  icon: docker
  check_every: 24h
  source:
    tag: latest
    <<: &gk_ops_image_params
      repository: ((private_registry_repo))
      username:   ((private_registry_username))
      password:   ((private-registry-password))

- name: gk-ops-image-rc
  type: docker-image # we can't migrate to 'registry-image' until we adopt the 'build-image' task
  icon: docker
  check_every: 24h
  source:
    tag: release-candidate
    <<: *gk_ops_image_params

- name: cflinuxfs4-image
  type: docker-image
  icon: docker
  check_every: 24h
  source:
    repository: cloudfoundry/cflinuxfs4
    tag: latest
    username: ((dockerhub_username))
    password: ((dockerhub-password))

- name: om-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: pivotal-cf
    repository: om
    access_token: ((github-access-token))

- name: semver-cli # Small CLI to compare semvers written in Go
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: christianang
    repository: semver-cli
    access_token: ((github-access-token))

- name: pivnet-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: ((github-access-token))

- name: stemcell-downloader
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: pivotal-cf
    repository: pcf-product-stemcell-downloader
    access_token: ((github-access-token))

- name: terraform
  type: hashicorp-release
  check_every: 24h
  source:
    project: terraform

- name: jq
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: stedolan
    repository: jq
    access_token: ((github-access-token))

- name: spruce-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: geofffranks
    repository: spruce
    access_token: ((github-access-token))

- name: bosh-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: cloudfoundry
    repository: bosh-cli
    access_token: ((github-access-token))

- name: yq
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: mikefarah
    repository: yq
    access_token: ((github-access-token))

- name: cf-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: cloudfoundry
    repository: cli
    access_token: ((github-access-token))

- name: tile-config-generator
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: vmwarepivotallabs
    repository: tile-config-generator
    access_token: ((github-access-token))

- name: cf-mgmt
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: vmwarepivotallabs
    repository: cf-mgmt
    access_token: ((github-access-token))

- name: credhub-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: cloudfoundry-incubator
    repository: credhub-cli
    access_token: ((github-access-token))

- name: bbr
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-access-token))

- name: uaa-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: cloudfoundry-incubator
    repository: uaa-cli
    access_token: ((github-access-token))

- name: carvel-ytt-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: vmware-tanzu
    repository: carvel-ytt
    access_token: ((github-access-token))

- name: carvel-kapp-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: vmware-tanzu
    repository: carvel-kapp
    access_token: ((github-access-token))

- name: dnscontrol-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: StackExchange
    repository: dnscontrol
    access_token: ((github-access-token))

- name: yasak-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: gstackio
    repository: yasak
    access_token: ((github-access-token))

- name: vars-to-credhub-cli
  type: github-release
  icon: github
  check_every: 24h
  source:
    user: gstackio
    repository: vars-to-credhub
    access_token: ((github-access-token))

jobs:
- name: build-image
  old_name: build-gk-ops-image
  serial_groups: [ gk-ops-image ]
  plan:
  - in_parallel:
    - get: dockerfile-repo
      trigger: true
    - get: cflinuxfs4-image
      trigger: true
      params: { save: true }

    - get: bbr
      params: { globs: [ "*-linux-amd64" ] }
      trigger: true
    - get: bosh-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: carvel-kapp-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: carvel-ytt-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: cf-cli
      params: { globs: [ "" ] }
      trigger: true
    - get: cf-mgmt
      params: { globs: ["*-linux"] }
      trigger: true
    - get: credhub-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: dnscontrol-cli
      params: { globs: [ "*linux_amd64*" ] }
      trigger: true
    - get: jq
      params: { globs: [ "*linux64*" ] }
      trigger: true
    - get: om-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: pivnet-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: semver-cli
      params: { globs: [ "*linux*" ] }
      trigger: true
    - get: spruce-cli
      params: { globs: [ "*linux-amd64" ] }
      trigger: true
    - get: stemcell-downloader
      params: { globs: [ "*linux*" ] }
      trigger: true
    - get: terraform
      params: { regexp: linux_amd64.zip }
      trigger: true
    - get: tile-config-generator
      params: { globs: ["*linux*"] }
      trigger: true
    - get: uaa-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: vars-to-credhub-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: yasak-cli
      params: { globs: [ "*linux-amd64*" ] }
      trigger: true
    - get: yq
      params: { globs: [ "*linux_amd64*" ] }
      trigger: true

  - task: prepare-workspace
    image: cflinuxfs4-image
    config:
      platform: linux
      inputs:
      - name: dockerfile-repo
      - name: om-cli
      - name: semver-cli
      - name: pivnet-cli
      - name: stemcell-downloader
      - name: terraform
      - name: jq
      - name: spruce-cli
      - name: bosh-cli
      - name: yq
      - name: cf-cli
      - name: tile-config-generator
      - name: cf-mgmt
      - name: bbr
      - name: credhub-cli
      - name: uaa-cli
      - name: carvel-ytt-cli
      - name: carvel-kapp-cli
      - name: dnscontrol-cli
      - name: yasak-cli
      - name: vars-to-credhub-cli
      outputs:
      - name: workspace
      run:
        path: bash
        args:
        - -c
        - |
          set -eo pipefail -x
          cp semver-cli/semver-linux workspace/semver

          resolved_om_bin=$(
              find om-cli -type f -regextype posix-extended \
                  -regex 'om-cli/om-linux(-amd64)?-[0-9.]+'
          )
          cp "${resolved_om_bin}" workspace/om

          cp jq/jq-* workspace/jq
          cp pivnet-cli/pivnet-linux-* workspace/pivnet
          cp stemcell-downloader/stemcell-downloader-linux workspace/stemcell-downloader

          tf_ver=$( < terraform/version )
          unzip -qo -d "workspace" terraform/terraform_${tf_ver}_linux_amd64.zip

          cf_cli_version=$(cat cf-cli/version)
          (
              set -x
              curl --silent --fail --show-error --location \
                  --url "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${cf_cli_version}&source=github-rel" \
                  --output "cf-cli.tgz"
          )
          tar -xf "cf-cli.tgz" -C "cf-cli"
          cf_cli=$(find "cf-cli" -maxdepth 1 -name "cf*" -type f -executable)
          cp "${cf_cli}" workspace/cf

          cp spruce-cli/spruce-* workspace/spruce
          cp bosh-cli/bosh-* workspace/bosh
          cp yq/yq_linux_amd64 workspace/yq
          cp tile-config-generator/tile-config-generator-linux workspace/tile-config-generator

          cp cf-mgmt/cf-mgmt-linux workspace/cf-mgmt
          cp cf-mgmt/cf-mgmt-config-linux workspace/cf-mgmt-config
          cp bbr/bbr-[0-9]*-linux-amd64 workspace/bbr

          tar -xf credhub-cli/credhub-linux-*.tgz -C "credhub-cli"
          cp credhub-cli/credhub workspace/credhub

          cp uaa-cli/uaa-* workspace/uaa

          cp carvel-ytt-cli/ytt-* workspace/ytt
          cp carvel-kapp-cli/kapp-* workspace/kapp

          tar --extract --directory="workspace" \
              --file dnscontrol-cli/dnscontrol_*_linux_amd64.tar.gz \
              "dnscontrol"

          cp yasak-cli/yasak-* workspace/yasak

          (
              set -x
              curl --silent --fail --show-error --location \
                  --url "https://raw.githubusercontent.com/gstackio/yasak/master/example-edit-value.sh" \
                  --remote-name
          )
          sed -i 's|sed -e|sed -i -e|' "example-edit-value.sh"
          cp "example-edit-value.sh" "workspace/update-yaml-value"

          cp vars-to-credhub-cli/vars-to-credhub-* workspace/vars-to-credhub

          chmod +x workspace/*

          cp dockerfile-repo/gk-ops-image/Dockerfile workspace/

  - put: gk-ops-image-rc
    inputs: detect
    params:
      load_base: cflinuxfs4-image
      build: workspace

- name: test-image
  serial_groups: [ gk-ops-image ]
  plan:
  - get: gk-ops-image-rc
    trigger: true
    passed: [ build-image ]
  - task: test-for-required-binaries
    image: gk-ops-image-rc
    config:
      platform: linux
      run:
        path: bash
        args:
        - -c
        - |
          set -xeo pipefail
          which om                    && om version
          which semver                && semver compare "7.7.7" "7.7.7"
          which cf                    && cf version
          which pivnet                && pivnet version
          which stemcell-downloader
          which jq                    && jq --version
          which terraform             && terraform version
          which spruce                && spruce --version
          which bosh                  && bosh --version | cat
          which yq                    && yq --version
          which tile-config-generator && tile-config-generator version
          which cf-mgmt               && cf-mgmt        version
          which cf-mgmt-config        && cf-mgmt-config version
          which bbr                   && bbr version
          which credhub               && credhub --version
          which uaa                   && uaa version
          which ytt                   && ytt --version
          which kapp                  && kapp --version
          which dnscontrol            && dnscontrol version

          which pip                   && pip --version
          which gem                   && gem --version
          which uaac                  && uaac version
          which az                    && az version -o yaml
          which gcloud                && gcloud --version
          which envsubst              && envsubst --version
          which go                    && go version
          which vars-to-credhub       && vars-to-credhub --help
          which yasak                 && yasak --version

          echo plip: "plop" > dummy.yml
          which update-yaml-value     && update-yaml-value "dummy.yml" "/plip" "bim"

          which vars-to-credhub       && vars-to-credhub --version

- name: promote-image
  serial_groups: [ gk-ops-image ]
  plan:
  - in_parallel:
    - get: gk-ops-image-rc
      passed: [ test-image ]
      trigger: true
      params: { save: true }
    - get: image-version
      params: { bump: patch }
  - put: gk-ops-image
    params:
      load: gk-ops-image-rc
      tag: image-version/version
      tag_as_latest: true
  - put: image-version
    params:
      file: image-version/version
